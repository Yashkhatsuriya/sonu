
CREATE OR REPLACE PROCEDURE FACTORIAL(N IN NUMBER,FAC IN OUT NUMBER) AS
BEGIN
FAC:=1;
FOR I IN 1..N LOOP
FAC:= FAC*I;
END LOOP;
END;

DECLARE
N NUMBER;
FAC NUMBER:=1;
BEGIN
N:=:ENTER_ANY_NUMBER;
FACTORIAL(N,FAC);
DBMS_OUTPUT.PUT_LINE('FACTORIAL IS : ' || FAC);
END;


CREATE OR REPLACE PROCEDURE INSERTRECORDS(EMPNO IN NUMBER, EMPNAME IN VARCHAR2, EMPSAL IN NUMBER, DEPTNO IN NUMBER, DESIGNATION IN VARCHAR2, HIREDATE IN DATE) AS
BEGIN
INSERT INTO EMP1 VALUES(EMPNO,EMPNAME,EMPSAL,DEPTNO,DESIGNATION,HIREDATE);
DBMS_OUTPUT.PUT_LINE('RECORDS INSERTED SUCCESSFULLY');
END;

SELECT * FROM EMP1;


BEGIN
INSERTRECORDS(110,'KARAN',5000,12,'MANAGER',SYSDATE);
END;

3.
CREATE OR REPLACE PROCEDURE DELETERECORDS(NO IN NUMBER) AS
BEGIN
DELETE FROM EMP1 WHERE EMPNO=NO;
DBMS_OUTPUT.PUT_LINE('RECORD DELETED SUCCESSFULLY');
END;

SELECT * FROM EMP1;

BEGIN
DELETERECORDS(102);
END;

4.
CREATE OR REPLACE PROCEDURE UPDATERECORDS(NO IN NUMBER,DT IN DATE) AS
BEGIN
UPDATE EMP1 SET HIREDATE=DT WHERE EMPNO=NO;
DBMS_OUTPUT.PUT_LINE('RECORD UPDATED SUCCESSFULLY');
END;

SELECT * FROM EMP1;

BEGIN
UPDATERECORDS(101,SYSDATE);
END;

5.
CREATE OR REPLACE PROCEDURE FINDMAX(N1 IN NUMBER,N2 IN NUMBER,N3 IN NUMBER) AS
BEGIN
IF N1 > N2 AND N1>N3 THEN
DBMS_OUTPUT.PUT_LINE('MAXIMUM = ' || N1);
ELSIF N2 > N3 AND N2>N1 THEN
DBMS_OUTPUT.PUT_LINE('MAXIMUM = ' || N2);
ELSE
DBMS_OUTPUT.PUT_LINE('MAXIMUM = ' || N3);
END IF;
END;


BEGIN
FINDMAX(10,30,20);
END;

6.
CREATE OR REPLACE PROCEDURE FINDAREA(SHAPE IN VARCHAR,L IN NUMBER,B IN NUMBER,AREA OUT NUMBER) AS
BEGIN
IF SHAPE='SQUARE' THEN
AREA:=L*L;
ELSIF SHAPE='RECTANGLE' THEN
AREA:=L*B;
ELSE
DBMS_OUTPUT.PUT_LINE('INVALID SHAPE');
END IF;
END;

DECLARE
LEN NUMBER := 10;
BREADTH NUMBER := 20;
AREA NUMBER:=1;
SHAPE VARCHAR2(30);
BEGIN
SHAPE:=:ENTER_SHAPE;
FINDAREA(SHAPE,LEN,BREADTH,AREA);
DBMS_OUTPUT.PUT_LINE('AREA IS : ' || AREA);
END;

7.
CREATE OR REPLACE PROCEDURE CALCPER(ROLL IN NUMBER,M1 IN NUMBER,M2 IN NUMBER, M3 IN NUMBER) AS
TOTAL NUMBER;
PER NUMBER;
BEGIN
TOTAL := M1 + M2+ M3;
PER : = TOTAL/3;
DBMS_OUTPUT.PUT_LINE(TOTAL);
DBMS_OUTPUT.PUT_LINE('PER');
END;
