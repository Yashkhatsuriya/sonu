








CREATE OR REPLACE FUNCTION AVGSAL(ENO IN NUMBER) 
RETURN NUMBER
IS
SAL NUMBER(4);
D NUMBER(4);
BEGIN 
DBMS_OUTPUT.PUT_LINE(ENO);
SELECT DEPTNO INTO D FROM EMP1 WHERE EMPNO=ENO; 
SELECT AVG(EMPSAL) INTO SAL FROM EMP1 WHERE DEPTNO=D;

DBMS_OUTPUT.PUT_LINE(SAL);
RETURN SAL;
END;

DECLARE 
AVERAGESALARY NUMBER;
ENO NUMBER;
BEGIN
ENO :=:ENTER_EMPNO;
AVERAGESALARY := AVGSAL(ENO);
DBMS_OUTPUT.PUT_LINE('AVERAGE SALARY IS ' || AVERAGESALARY);
END;

SELECT * FROM EMP1;


2.
CREATE OR REPLACE FUNCTION CMDINT(AMT IN NUMBER, RT IN NUMBER, TM IN NUMBER) 
RETURN NUMBER
IS
SI NUMBER(4);
BEGIN 
SI:=(AMT * RT * TM)/100;
RETURN SI;
END;

DECLARE 
SIMPLEINT NUMBER;
AMOUNT NUMBER;
TIME NUMBER;
RATE NUMBER;
BEGIN 
AMOUNT:=:ENTER_AMOUNT;
RATE:=:ENTER_RATE;
TIME:=:ENTER_TIME;
SIMPLEINT:=COMPOUND(AMOUNT,RATE,TIME);
DBMS_OUTPUT.PUT_LINE('SIMPLE INTEREST IS ' || SIMPLEINT);
END;


CREATE OR REPLACE FUNCTION COMPOUND(AMT IN NUMBER, RT IN NUMBER, TM IN NUMBER)
RETURN NUMBER
IS
INTEREST NUMBER;
BEGIN
INTEREST := (AMT * (( 1 + (RT/100)) ** TM)) - AMT;
RETURN INTEREST;
END;

3. 
CREATE OR REPLACE FUNCTION CALEXPERIENCE(ENO IN NUMBER) 
RETURN NUMBER
IS
EXP NUMBER(2);
HD DATE;
BEGIN 
SELECT HIREDATE INTO HD FROM EMP1 WHERE EMPNO=ENO;
DBMS_OUTPUT.PUT_LINE(HD);
DBMS_OUTPUT.PUT_LINE(ENO);
DBMS_OUTPUT.PUT_LINE(SYSDATE);
EXP := ((SYSDATE - HD)/12); 
RETURN EXP;
END;


DECLARE 
EXPERIENCE NUMBER;
EMPLNO NUMBER;
BEGIN
EMPLNO :=:ENTER_EMPLOYEE_NUMBER;
EXPERIENCE := CALEXPERIENCE(EMPLNO);
DBMS_OUTPUT.PUT_LINE('EXPERIENCE IS OF ' || EXPERIENCE || ' YEARS');
END;

SELECT * FROM EMP1;

UPDATE EMP1 SET HIREDATE=SYSDATE WHERE EMPNO=104;